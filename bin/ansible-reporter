#!/usr/bin/env python
"""
Test ansible report runner
"""

import os
import sys
from termcolor import colored, cprint

try:
    from ansiblereporter import __version__
except ImportError:
    BASE_DIR = os.sep.join(os.path.realpath(__file__).split(os.sep)[:-2])
    moduledir = os.path.join(BASE_DIR, 'ansiblereporter')
    if os.path.isdir(moduledir):
        sys.path.insert(0, BASE_DIR)
    from ansiblereporter import __version__

from ansiblereporter.result import ReportRunnerError
from ansiblereporter.cli import ReportScript, create_directory

def result_formatter(result):
    output = ''

    if result.status in ( 'ok', 'error', 'unknown', ):
        status = '%s | %s | rc=%d >>' % (result.host, result.ansible_status, result.returncode)
        if result.returncode == 0:
            output += colored(status, 'green')
        else:
            output += colored(status, 'red')
        output += colored('\n%s' % result.stdout)

    else:
        status = '%s | %s => %s' % (result.host, result.ansible_status, result.error)
        output += colored(status, 'red')
        if result.stdout or result.stderr:
            output += colored('\n%s\n%s' % (result.stdout, result.stderr), 'red')

    return output

def result_formatter_json(result):
    return result.to_json()


script = ReportScript()
script.add_argument('--json', action='store_true', help='Show results in json format')
script.add_argument('--by-host', action='store_true', help='Store results to separate files')
script.add_argument('--output-file', help='Result output file')
script.add_argument('--output-directory', help='Result output directory')

try:
    args, results = script.run()
except ReportRunnerError, emsg:
    script.exit(1, emsg)

if args.by_host and not args.output_directory:
    script.exit(1, 'Argument --by-host requires output directory')

if args.by_host:
    try:
        create_directory(args.output_directory)
    except ReportRunnerError, emsg:
        script.exit(1, emsg)

    for result in results.contacted:
        if args.json:
            result.write_to_directory(args.output_directory, result_formatter_json, 'json')
        else:
            result.write_to_directory(args.output_directory, result_formatter, 'txt')

elif args.output_file:
    try:
        create_directory(os.path.dirname(args.output_file))
    except ReportRunnerError, emsg:
        script.exit(1, emsg)

    results.write_to_file(args.output_file, formatter=result_formatter, json=args.json)

else:
    if args.json:
        script.message('%s' % results.to_json())

    else:
        for result in results.contacted:
            script.message('%s\n' % result.format(result_formatter))

        for result in results.dark:
            script.error('%s\n' % result.format(result_formatter))


summary_fields = ('contacted', 'dark', 'ok', 'error', 'failed', 'unknown')
summary = results.summary
summary_string = ''
for k in summary_fields:
    summary_string += '%d %s, ' % (summary[k], k)
script.log.debug(summary_string.strip(', '))

